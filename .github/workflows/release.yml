# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: build & deploy
on:
  workflow_dispatch:
    inputs:
      user_name:
        description: 배포유저
        required: true
        type: string
      stage_choice:
        description: 서버 환경
        type: choice
        options:
          - ''
          - dev
      release_message:
        description: 릴리즈 메시지
        type: string
  workflow_call:
    inputs:
      user_name:
        description: :배포유저
        type: string
        required: true
      stage_choice:
        description: :서버 환경
        type: string
        required: true
      branch:
        description: 브랜치
        type: string
      release_message:
        description: 릴리즈 메시지
        type: string

run-name: 'stage: ${{ inputs.stage_choice }} release : ${{ inputs.branch }}'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - uses: actions/checkout@v2
 # cd:
  #  runs-on: ubuntu-latest

   # steps:
    - name: docker build
      run: | 
        docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
        echo "git will pull origin : [${{ inputs.branch }}]"
        git pull origin ${{ inputs.branch }}
        git checkout ${{ inputs.branch }}
        docker build -t ${{ secrets.USERNAME }}/gaza-server:0.0.1 .
        docker push ${{ secrets.USERNAME }}/gaza-server:0.0.1

    - name: Deploy
      uses: appleboy/ssh-action@v0.1.8
      with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker rmi ${{ secrets.USERNAME }}/gaza-server:0.0.1
            docker pull ${{ secrets.USERNAME }}/gaza-server:0.0.1
            cd GAZA-server
            echo "git will pull origin : ${{inputs.branch}}"
            git pull origin ${{inputs.branch}}
            docker-compose up -d
