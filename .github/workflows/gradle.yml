# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - uses: actions/checkout@v2
    - run: touch ./src/main/resources/application.yml
    - run: echo "${{secrets.PROPERTIES}}" > ./src/main/resources/application.yml
    - uses: actions/upload-artifact@v2
      with:
        name: application.yml
        path: ./src/main/resources/application.yml

    - name: Add permission
      run: chmod +x gradlew

    - name: Test with Gradle
      run: ./gradlew test

    - name: Clean with Gradle
      run: ./gradlew clean

    - name: Build with Gradle
      # uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      # with:
      #  arguments: build
      run: ./gradlew clean build

 # cd:
  #  runs-on: ubuntu-latest

   # steps:
    - name: docker build
      run: | 
        docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
        docker build -t ${{ secrets.USERNAME }}/gaza-server:0.0.1 .
        docker push ${{ secrets.USERNAME }}/gaza-server:0.0.1

    - name: Deploy
      uses: appleboy/ssh-action@v0.1.8
      with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker rmi ${{ secrets.USERNAME }}/gaza-server:0.0.1
            docker pull ${{ secrets.USERNAME }}/gaza-server:0.0.1
            docker-compose up -d
